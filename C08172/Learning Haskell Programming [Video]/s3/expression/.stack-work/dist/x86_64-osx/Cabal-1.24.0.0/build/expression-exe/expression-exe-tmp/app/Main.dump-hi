
==================== FINAL INTERFACE ====================
2016-11-05 17:42:38.383671 UTC

interface main@main:Main 8001
  interface hash: b8474ec8e4c638487d084238bce0db06
  ABI hash: bdc75c00a4e93aef280b1ccf352b3964
  export-list hash: 5f44f88f6408a85eae55534344a8ab87
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 38e91d7f246a10f4769045cbd52c1a4b
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: base-4.9.0.0*
                      expression-0.1.0.0@expression-0.1.0.0-LLH3ZZG0tgVL93rajMeVXb
                      ghc-prim-0.5.0.0 integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.IO 3ec1282f1d2076b23a73da7601561475
import  -/  expression-0.1.0.0@expression-0.1.0.0-LLH3ZZG0tgVL93rajMeVXb:Expression fd14bd5ab7c4b76a3b4bdf5c5d1ef77d
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
426b511c5e24d084b4b441b4d9093cca
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
ca5c34d20f984d77fea4dc42f8a4a802
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True
                   eta) -}
be3429a421f83606ba02dbe7730d719d
  main2 :: GHC.Base.String
  {- Unfolding: (case Expression.calculate
                        Main.main3 of ww2 { GHC.Types.I# ww3 ->
                 case GHC.Show.$wshowSignedInt
                        0#
                        ww3
                        (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                 GHC.Types.: @ GHC.Types.Char ww5 ww6 } }) -}
e79cd14bad729ecb4bd778b4e070aa93
  main3 :: Expression.Expression
  {- HasNoCafRefs,
     Unfolding: (Expression.Add Main.main6 Main.main4) -}
a57a0aacd0e444d20a59fea17c5f8015
  main4 :: Expression.Expression
  {- HasNoCafRefs, Unfolding: (Expression.Number Main.main5) -}
cf54416dc2657cbbed97258c25e20003
  main5 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 2#) -}
7cf047595c405b9ae287ed5ae7416ea1
  main6 :: Expression.Expression
  {- HasNoCafRefs, Unfolding: (Expression.Number Main.main7) -}
6af5785c94a8c9a5bfe0a23a99a3d258
  main7 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1#) -}
2af58deaaf9a2866a921729546bb0e01
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

